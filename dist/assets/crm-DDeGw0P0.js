var o=Object.defineProperty;var d=(n,e,t)=>e in n?o(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var l=(n,e,t)=>d(n,typeof e!="symbol"?e+"":e,t);class c{constructor(){l(this,"leads",[{id:"lead-001",email:"mike.wilson@email.com",firstName:"Mike",lastName:"Wilson",phone:"(905) 555-0123",address:"789 Elm St, St. Catharines, ON",source:"Website",status:"Qualified",priority:"High",serviceType:"Commercial",estimatedValue:2500,notes:"Office building - 5000 sq ft, looking for weekly service",createdDate:"2024-12-08",lastActivity:"2024-12-10",nextFollowUp:"2024-12-12",assignedTo:"Fin Clarke",tags:["Commercial","Weekly Service","Large Account"],customFields:{squareFootage:5e3,buildingType:"Office",currentProvider:"None"}},{id:"lead-002",email:"jennifer.brown@email.com",firstName:"Jennifer",lastName:"Brown",phone:"(289) 555-0789",address:"321 Pine St, Niagara Falls, ON",source:"Google Ads",status:"Proposal Sent",priority:"Medium",serviceType:"Residential",estimatedValue:450,notes:"3 bedroom house, deep clean requested for move-in",createdDate:"2024-12-09",lastActivity:"2024-12-10",nextFollowUp:"2024-12-13",assignedTo:"Fin Clarke",tags:["Move-in","Deep Clean","New Customer"],customFields:{bedrooms:3,bathrooms:2,urgency:"Within 1 week"}}]);l(this,"activities",[{id:"act-001",leadId:"lead-001",type:"Call",description:"Initial consultation call - discussed weekly office cleaning needs",date:"2024-12-08",performedBy:"Fin Clarke",outcome:"Interested - scheduling site visit"},{id:"act-002",leadId:"lead-002",type:"Quote Sent",description:"Deep cleaning quote sent via email - $450 for 3BR house",date:"2024-12-10",performedBy:"Fin Clarke"}])}async createLead(e){var t,i;try{await new Promise(s=>setTimeout(s,500));const a={id:`lead-${Date.now()}`,email:e.email,firstName:e.firstName||((t=e.name)==null?void 0:t.split(" ")[0])||"",lastName:e.lastName||((i=e.name)==null?void 0:i.split(" ")[1])||"",phone:e.phone,address:e.address,source:"Website",status:"New",priority:this.calculatePriority(e),serviceType:e.propertyType==="residential"?"Residential":"Commercial",estimatedValue:this.calculateEstimatedValue(e),notes:this.generateInitialNotes(e),createdDate:new Date().toISOString().split("T")[0],lastActivity:new Date().toISOString().split("T")[0],assignedTo:"Fin Clarke",tags:this.generateTags(e),customFields:this.extractCustomFields(e)};return this.leads.push(a),{success:!0,leadId:a.id}}catch{return{success:!1,error:"Failed to create lead"}}}getLeads(e){let t=[...this.leads];return e&&(e.status&&(t=t.filter(i=>i.status===e.status)),e.priority&&(t=t.filter(i=>i.priority===e.priority)),e.serviceType&&(t=t.filter(i=>i.serviceType===e.serviceType)),e.assignedTo&&(t=t.filter(i=>i.assignedTo===e.assignedTo))),t.sort((i,a)=>new Date(a.createdDate).getTime()-new Date(i.createdDate).getTime())}async updateLeadStatus(e,t,i){await new Promise(s=>setTimeout(s,300));const a=this.leads.findIndex(s=>s.id===e);return a===-1?{success:!1}:(this.leads[a].status=t,this.leads[a].lastActivity=new Date().toISOString().split("T")[0],{success:!0})}getCRMStats(){const e=this.leads.length,t=this.leads.filter(s=>s.status==="New").length,i=this.leads.filter(s=>s.status==="Qualified").length,a=this.leads.filter(s=>s.status==="Closed Won").length;return{totalLeads:e,newLeads:t,qualifiedLeads:i,conversionRate:e>0?Math.round(a/e*100):0,averageDealValue:Math.round(this.leads.reduce((s,r)=>s+r.estimatedValue,0)/e),monthlyRevenue:this.leads.filter(s=>s.status==="Closed Won").reduce((s,r)=>s+r.estimatedValue,0),pipelineValue:this.leads.filter(s=>["Qualified","Proposal Sent"].includes(s.status)).reduce((s,r)=>s+r.estimatedValue,0)}}getActivities(e){return this.activities.filter(t=>t.leadId===e).sort((t,i)=>new Date(i.date).getTime()-new Date(t.date).getTime())}async addActivity(e,t){await new Promise(a=>setTimeout(a,300));const i={id:`act-${Date.now()}`,leadId:e,date:new Date().toISOString().split("T")[0],...t};return this.activities.push(i),{success:!0}}calculatePriority(e){return e.propertyType==="commercial"||e.bedrooms&&Number.parseInt(e.bedrooms)>=4?"High":"Medium"}calculateEstimatedValue(e){if(e.propertyType==="commercial"){const r=Number.parseInt(e.squareFootage)||2e3;return Math.round(r*.15*12)}const t=Number.parseInt(e.bedrooms)||2,i=Number.parseInt(e.bathrooms)||1,a=120+t*15+i*20,s=e.frequency==="weekly"?52:e.frequency==="biWeekly"?26:12;return Math.round(a*s*.85)}generateInitialNotes(e){const t=[];return e.propertyType==="residential"?t.push(`${e.bedrooms||"N/A"} bedrooms, ${e.bathrooms||"N/A"} bathrooms`):t.push(`${e.squareFootage||"N/A"} sq ft ${e.buildingType||"commercial"} space`),e.cleaningType&&t.push(`Service type: ${e.cleaningType}`),t.join(" | ")}generateTags(e){const t=["Website Lead"];return e.propertyType&&typeof e.propertyType=="string"&&t.push(e.propertyType.charAt(0).toUpperCase()+e.propertyType.slice(1)),e.cleaningType==="deep"&&t.push("Deep Clean"),t}extractCustomFields(e){const t={};return e.propertyType==="residential"?(t.bedrooms=e.bedrooms,t.bathrooms=e.bathrooms):(t.squareFootage=e.squareFootage,t.buildingType=e.buildingType),t.cleaningType=e.cleaningType,t.frequency=e.frequency,t}}const p=new c;export{p as c};
